#!/usr/bin/perl -w

use strict;
use warnings;
use utf8;
use JSON;

use open qw(:std :utf8); # use utf8 for descriptors, e.g. STDOUT


sub usage {
    printf "parse_sql.pl [mysql|firebird] <schema.json>\n";
    exit 1;
}

usage if ( $ARGV[0] !~ /^(mysql|firebird)$/ );
my $SCHEMA_TYPE = $ARGV[0];

open FILE, $ARGV[1] or usage;
binmode FILE, ':utf8';

my @json = <FILE>;
my $json_text = join "", @json;

my $json = JSON->new->allow_nonref->indent->space_before->space_after;
my $streams = $json->utf8(0)->decode($json_text);
die if ! defined $streams || ref $streams ne 'ARRAY';

print "/*\n";
print " * !!! AUTOMATICALLY GENERATED BY THE SCRIPT !!!\n";
print " * !!! ALL MODIFICATIONS WILL BE OVERRIDEN !!!\n";
print " */\n\n";


if ( $SCHEMA_TYPE eq 'mysql' ) {
    print "DROP DATABASE IF EXISTS `ad`;\n";
    print "CREATE DATABASE IF NOT EXISTS `ad`;\n";
    print "CONNECT `ad`;\n";
    print "SET sql_mode='ANSI_QUOTES';\n\n";
}
my $col_symbol = '"';

for my $stream ( @$streams ) {
    die if scalar keys %$stream != 1;
    my $stream_name = (keys %$stream)[0];
    my $stream_desc = $stream->{$stream_name};

    printf "CREATE TABLE %s %s (\n",
        ($SCHEMA_TYPE eq "mysql" ? "IF NOT EXISTS" : ""),
        uc($stream_desc->{table});
    my $fields = $stream_desc->{fields};
    my $keys_array = $stream_desc->{keys};
    my $un_indices_array = $stream_desc->{unique_indices};
    my %keys = map { $_ => 1 } @$keys_array;
    for ( my $i = 0; $i <= $#{$fields}; ++$i ) {
        my $field = $fields->[$i];
        die if scalar keys %$field != 1;
        my $field_name = (keys %$field)[0];
        my $field_desc = $field->{$field_name};
        my $field_type = $field_desc->{type};
        if ( $field_type eq 'varchar' && exists $keys{ $field_name } ) {
            $field_type = 'VARCHAR(64)';
        }
        elsif ( $field_type eq 'varchar' ) {
            $field_type = 'VARCHAR(256)';
        }
        else {
            $field_type = uc($field_type);
        }


        printf "\t%s%s%s\t%s", $col_symbol, $field_name, $col_symbol, $field_type;

        if ( exists $keys{ $field_name } ) {
            print "\tNOT NULL";
        }
        if ( $i == $#{$fields} ) {
            print "\n";
        }
        else {
            print ",\n";
        }
    }
    printf ") %s;\n\n",
        ($SCHEMA_TYPE eq 'mysql' ?
         "ENGINE=MyISAM DEFAULT CHARSET=utf8" : "");

    # Remove MY_ prefix
    my $constraint_name = uc($stream_desc->{table});
    $constraint_name =~ s/my_//i;

    print "ALTER TABLE " . uc($stream_desc->{table}) .
        " ADD UNIQUE INDEX (" . join(", ", (map { sprintf("%s%s%s", $col_symbol, $_, $col_symbol) } @$un_indices_array)) . ");\n"
            if $un_indices_array && scalar @$un_indices_array;

    print "ALTER TABLE " . uc($stream_desc->{table}) . " ADD CONSTRAINT " .
        $constraint_name . "_PK PRIMARY KEY (" . join(", ", (map { sprintf("%s%s%s", $col_symbol, $_, $col_symbol) } @$keys_array)) . ");\n"
            if $keys_array && scalar @$keys_array;

    print "\n";
}
